[tool.poetry]
name = "aml"
version = "0.1.0"
description = ""
authors = ["Luc Bams <lbm@mediaan.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
azure-ai-ml = "^1.15.0"


[tool.poetry.dev-dependencies]
black = "^20.8b1" # format code
bump2version = "^1.0.1" # increase version number across files
darglint = "^1.8.1" # Checks consistency between docsting types and function signatures
flake8 = "^3.8.3" # lint the code
flake8-docstrings = "^1.6.0" # lint the docstrings
interrogate = "^1.5.0" # Computes docstring coverage
ipykernel = "^6.17.1"
isort = "^5.10.1" # properly sort imports
mkdocs = "^1.1.2" # build documentation
mkdocs-markdownextradata-plugin = "^0.1.9" # Helps create templated documentation
mkdocs-material = "^6.2.8" # Theme for the mkdocs documentation
mkdocstrings = "^0.13.6" # Builds markdown documentation from docstrings
mypy = "^0.991" # Checks for type compability
pytest = "^6.1.0" # Used for testing
pytest-cov = "^2.12.1" # calculate test coverage
towncrier = "^19.9.0" # generate the changelog
tox = "^3.27.1" # Automates testing
bandit = "^1.7.4"
seaborn = "^0.11.2"
plotnine = "^0.7.1"
plotly = "^4.14.3"
nbformat = "^5.7.0"
python-dotenv = "^1.0.1"


[tool.black]
line-length = 88 # override black's default line-length
target-version = ["py310"]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | venv
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
include = ["prediction/*.py"]

[tool.interrogate]
fail-under = 100
exclude = ["setup.py", "tests", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true

[tool.isort]
profile = "black"
known_third_party = []
# https://black.readthedocs.io/en/stable/compatible_configs.html#isort
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
junit_family = "xunit2"
testpaths = ["tests/"]
addopts = ["--cov"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
